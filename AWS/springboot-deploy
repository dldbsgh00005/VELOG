# Springboot-Deploy

1. aws 계정 생성

2. aws ec2 instance 생성 및 IAM 역할 생성

3. rds 데이터 베이스 생성 ( mysql )  # mysql의 t2-micro ( 프리티어 사용 가능 ) 으로 생성 postgrel로 생성할 시 t3-micro로 하게 되면 요금이 부과될 수 있음 t2-micro를 이용하자

4. s3 bucket 생성 ( 일단은 IAM에 RDS랑 S3의 AMAZONRDSREADONLYACCESS랑 AMAZONS3READONLYACCESS만 줬음 ) 

5. .ssh 폴더로 가서 pem키를 찾는다. 
>> ssh -i [pem키 파일 이름] ubuntu@[ec2 instance ip address]
>> sudo apt update
>> sudo snap install aws-cli 

6. Git 설치
>> sudo apt-get install git
>> git --version 혹은 git -v 로 깃 버전 확인

8. ssh key 발급 및 github 등록
cd ~/.ssh
ssh_getkey -t rsa -C [github email]

c/users/[사용자 계정]/.ssh/id_rsa.hub 파일 확인

혹은 cat id_rsa.pub ( 해당 경로로 이동 후 실행 ) 
>> github의 setting으로 이동 후 ssh key등록  ( github 전체 설정 , 우측 상단 ) 

7. ec2 instance cli 접속후 install jdk17  
>> sudo apt install openjdk-17-jdk -y 

8. repository clone 
>> git clone [git repository ssh url ]
>> 실패시 ssh -T git@github.com 실행 후 연결 시도
>> 실패시 ssh-keygen -t rsa -C [github email]     >> ssh key 재발급
>> ls ~/.ssh/ >> id_rsa와 id_rsa.pub이 있어야 함
>> cat ~/.ssh/id_rsa.pub 실행 후 복사, github의 전체 settings에 ssh key 등록
>> 다시 git clone [git repository ssh url] 
>> 성공!  >> ls 명렁어 실행시 clone 받은 content가 있어야 함

9. springboot project안으로 cd 후 
>> ./gradlew build 
>> 실패시 chmod +x ./gradlew 후 다시 ./gradlew build >> 성공!!

cd build >> cd lib >> jar 파일 확인

# Github Actions CI/CD 파일

Repository setting에서 secret 변수 작성
- EC2_HOST >> ec2 instace ip
- EC2_USER >> ubuntu
- EC2_KEY >> pem키의 private 

# Github Actions 빌드 실패시
- 경로를 확인한 후 알맞지 않을 시

- name: Build with Gradle Wrapper
      working-directory: ./[프로젝트 이름]  # Gradle Wrapper가 있는 경로로 변경
      run: ./gradlew build

위와 같이 수정 해준다.

# gradle permission denied 관련 오류시
>> chmod +x ./gradlew 

# dependency-submission ./gradlew 못찾을 시
>> 로컬에서 ./gradlew dependencies 명령어 실행
>> ./github/workflow/gradle.yml 파일에서  

dependency-submission에 gradle 관련 working-directroy 설정 

- name: Generate and submit dependency graph
  working-directory: ./springboot-deploy # Gradle Wrapper 경로 추가
  uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0


