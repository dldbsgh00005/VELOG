📍 개발 환경 
Backend : Spring Boot 3.4.3 / Gradle / Intellij  ...
Frontend : React 19 / vite / node.js / @stomp/stompjs / sockjs-client ... 

 📌 Backend
- WebConfig 혹은 Spring Security 사용시 요청을 허용할 Origin 및 Headers, Methods, Credentials 설정등을 해준다.
- WebSocketConfig에 WebSocketMessageBrokerConfigurer 을 inplements 해준 뒤
경로 설정을 해준다.  ( /ws, /ws/info 에 통신을 받고 , message를 송/수신 할 /pub /sub 경로를 설정해준다. )
- WebSocketController에 @MessageMapping, @SendTo 설정을 해준다. (SendTo는 WebSocketConfig에 설정해준 송신 경로를 포함해서 작성한다. 가능한 송/수신 추가 경로를 작성해준다.)
경로가 동적일 경우에는 @DestinationVariable로 받아서 SimpMessagingTemplate을 주입하여 convertAndSend 메소드를 활용한다.



📌 Frontend 
- 필요한 의존성들을 설치해준다. ( npm install @stomp/stompjs socketjs-client )
- 랜더링시 통신을 연결하기 위해 UseEffect를 활용해 초기 연결을 위한 경로 (ex : http://localhost:8080/ws ) 를 작성하고
추가적으로 webSocketFactory, dubug, reconnectDelay, onConnect 설정들을 해준다. 
- 메시지를 송신할 sendMessage 메소드를 작성해준다.
- 채팅을 담을 변수들과 채팅을 출력해줄 코드들을 작성해준다.
